name: Execute nightly tests

on:
  workflow_dispatch:
    branches: ["main"]
    inputs:
      environment:
        required: true 
        description: 'Environment to run tests against'
        default: 'https://automation-dashboard.staging.saleor.cloud/'
        type: choice
        options:
        - https://automation-dashboard.staging.saleor.cloud/
        - https://master.staging.saleor.cloud/
        - https://latest.staging.saleor.cloud/
  schedule:
    - cron: '00 3 * * 1-5'

  pull_request: #To delete after tests
    types: [reopened, synchronize, labeled, opened]
    branches: ["*"]

jobs:

  revert-automation-env-to-snap:
    if: github.event.inputs.environment == 'https://automation-dashboard.staging.saleor.cloud/'
    runs-on: ubuntu-latest
    steps:
      - name: Install saleor cli
        id: install-saleor-cli
        run: npm i -g saleor-cli

      - name: Write config file
        id: write-config-file
        env:
          ACCESS_TOKEN: ${{ secrets.CLOUD_ACCESS_TOKEN }}
          SALEOR_CLI_ENV: staging
        run: echo '{"token":"Token $ACCESS_TOKEN,"telemetry":"false","organization_slug":"qa","organization_name":"QA","environment_id":"lHECN87U"}' > ~/.config/saleor.json
      
      - name: revert snapshot
        run: npx saleor backup restore I7rNqplv

  run-tests-in-parallel:
    runs-on: ubuntu-latest
    container: cypress/browsers:node14.16.0-chrome89-ff86
    strategy:
      fail-fast: false
      matrix:
        # run copies of the current job in parallel
        containers: [1, 2, 3, 4]
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Get env
        id: get-env-uri
        env:
          DEFAULT_ENV_URI: 'https://automation-dashboard.staging.saleor.cloud/'
        run: |
          echo "::set-output name=ENV_URI::${{ github.event.inputs.environment || env.DEFAULT_ENV_URI }}"

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 14

      - name: Cypress run
        uses: cypress-io/github-action@v2
        env:
          API_URI: ${{ steps.api_uri.outputs.ENV_URI }}graphql/
          APP_MOUNT_URI: ${{ secrets.APP_MOUNT_URI }}
          CYPRESS_baseUrl: ${{ steps.api_uri.outputs.ENV_URI }}dashboard/
          CYPRESS_USER_NAME: ${{ secrets.CYPRESS_USER_NAME }}
          CYPRESS_SECOND_USER_NAME: ${{ secrets.CYPRESS_SECOND_USER_NAME }}
          CYPRESS_USER_PASSWORD: ${{ secrets.CYPRESS_USER_PASSWORD }}
          CYPRESS_PERMISSIONS_USERS_PASSWORD: ${{ secrets.CYPRESS_PERMISSIONS_USERS_PASSWORD }}
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          parallel: true
          group: 'UI - Chrome'
          command: npm run cy:run:allEnv:parallel



